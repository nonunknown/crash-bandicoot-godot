[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[ext_resource path="res://addons/shaderV/rgba/chromaticAberration.gd" type="Script" id=1]
[ext_resource path="res://addons/shaderV/tools/sinTime.gd" type="Script" id=2]

[sub_resource type="VisualShaderNodeCustom" id=1]
default_input_values = [ 2, -1.0, 3, 0.05, 4, 0.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = -1.0

[sub_resource type="VisualShaderNodeCustom" id=5]
default_input_values = [ 0, 1.0, 1, 1.0 ]
script = ExtResource( 2 )

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;


// ChromaticAberration

vec4 chr0maticAberrati0nFunc(sampler2D _texture_chr_aberrat1on, vec2 _uv_chr_aberrat1on, vec3 _values_chr_aberrat1on){
	vec4 _c0l_chr_aberrat1on = vec4(0.0);
	if (_values_chr_aberrat1on.z < 0.0){
		_c0l_chr_aberrat1on.r = texture(_texture_chr_aberrat1on, _uv_chr_aberrat1on + _values_chr_aberrat1on.xy).r;
		_c0l_chr_aberrat1on.g = texture(_texture_chr_aberrat1on, _uv_chr_aberrat1on).g;
		_c0l_chr_aberrat1on.b = texture(_texture_chr_aberrat1on, _uv_chr_aberrat1on - _values_chr_aberrat1on.xy).b;
		_c0l_chr_aberrat1on.a = texture(_texture_chr_aberrat1on, _uv_chr_aberrat1on).a;
	}else{
		_c0l_chr_aberrat1on.r = textureLod(_texture_chr_aberrat1on, _uv_chr_aberrat1on +
											_values_chr_aberrat1on.xy, _values_chr_aberrat1on.z).r;
		_c0l_chr_aberrat1on.g = textureLod(_texture_chr_aberrat1on, _uv_chr_aberrat1on, _values_chr_aberrat1on.z).g;
		_c0l_chr_aberrat1on.b = textureLod(_texture_chr_aberrat1on, _uv_chr_aberrat1on -
											_values_chr_aberrat1on.xy, _values_chr_aberrat1on.z).b;
		_c0l_chr_aberrat1on.a = textureLod(_texture_chr_aberrat1on, _uv_chr_aberrat1on, _values_chr_aberrat1on.z).a;
	}
	return _c0l_chr_aberrat1on;
}


void vertex() {
// Output:0

}

void fragment() {
// Input:17

// Input:18
	vec3 n_out18p0 = vec3(UV, 0.0);

// Scalar:19
	float n_out19p0 = -1.000000;

// SinTIME:21
	float n_in21p0 = 1.00000;
	float n_in21p1 = 1.00000;
	float n_out21p0;
	{
		n_out21p0 = n_in21p1 * sin(n_in21p0 * TIME);
	}

// ChromaticAberration:14
	vec3 n_out14p0;
	float n_out14p1;
	{
		vec4 n_out14p0n_out14p1 = chr0maticAberrati0nFunc(TEXTURE, n_out18p0.xy, vec3(n_out21p0, n_out21p0, n_out19p0));
		n_out14p0 = n_out14p0n_out14p1.rgb;
		n_out14p1 = n_out14p0n_out14p1.a;
	}

// Output:0
	COLOR.rgb = n_out14p0;
	COLOR.a = n_out14p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -99, -40 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 460, 0 )
nodes/fragment/14/node = SubResource( 1 )
nodes/fragment/14/position = Vector2( 200, 0 )
nodes/fragment/17/node = SubResource( 2 )
nodes/fragment/17/position = Vector2( -60, -100 )
nodes/fragment/18/node = SubResource( 3 )
nodes/fragment/18/position = Vector2( -60, -20 )
nodes/fragment/19/node = SubResource( 4 )
nodes/fragment/19/position = Vector2( -60, 60 )
nodes/fragment/21/node = SubResource( 5 )
nodes/fragment/21/position = Vector2( -60, 140 )
nodes/fragment/connections = PoolIntArray( 14, 0, 0, 0, 14, 1, 0, 1, 17, 0, 14, 0, 18, 0, 14, 1, 19, 0, 14, 2, 21, 0, 14, 3, 21, 0, 14, 4 )

[resource]
shader = SubResource( 6 )
