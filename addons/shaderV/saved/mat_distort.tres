[gd_resource type="ShaderMaterial" load_steps=12 format=2]

[ext_resource path="res://addons/shaderV/uv/animated/distortionUVAnimated.gd" type="Script" id=1]

[sub_resource type="VisualShaderNodeCustom" id=6]
default_input_values = [ 1, 0, 2, 0, 3, 0, 4, 0, 5, 1, 6, 0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 2.0

[sub_resource type="VisualShaderNodeScalarConstant" id=9]
constant = -0.2

[sub_resource type="VisualShaderNodeScalarConstant" id=10]
constant = -0.1

[sub_resource type="VisualShaderNodeScalarConstant" id=11]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=12]
constant = 2.0

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2

[sub_resource type="VisualShader" id=13]
code = "shader_type canvas_item;


// DistortionUVAnimated

vec2 d1stort1onUVAnimatedFunc(vec2 _uv_d1st, float _d1stX_d1st, float _d1stY_d1st, float _waveX_d1st, float _waveY_d1st, float _spd_d1st, float _t1me_d1st){
	_uv_d1st.x += sin(_uv_d1st.y * _waveX_d1st + _t1me_d1st * _spd_d1st) * _d1stX_d1st;
	_uv_d1st.y += sin(_uv_d1st.x * _waveY_d1st + _t1me_d1st * _spd_d1st) * _d1stY_d1st;
	return _uv_d1st;
}


void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Scalar:26
	float n_out26p0 = 2.000000;

// Scalar:30
	float n_out30p0 = 2.000000;

// Scalar:27
	float n_out27p0 = -0.200000;

// Scalar:28
	float n_out28p0 = -0.100000;

// Scalar:29
	float n_out29p0 = 1.000000;

// Input:25
	float n_out25p0 = TIME;

// DistortionUVAnimated:24
	vec3 n_out24p0;
	{
		n_out24p0.xy = d1stort1onUVAnimatedFunc(n_out3p0.xy, n_out27p0, n_out28p0, n_out26p0, n_out30p0, n_out29p0, n_out25p0);
	}

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out24p0.xy);
		n_out5p0 = _tex_read.rgb;
		n_out5p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -334, -30 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 520, -20 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -140, -200 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 320, -20 )
nodes/fragment/24/node = SubResource( 6 )
nodes/fragment/24/position = Vector2( 60, -20 )
nodes/fragment/25/node = SubResource( 7 )
nodes/fragment/25/position = Vector2( -160, 280 )
nodes/fragment/26/node = SubResource( 8 )
nodes/fragment/26/position = Vector2( -180, -120 )
nodes/fragment/27/node = SubResource( 9 )
nodes/fragment/27/position = Vector2( -180, 40 )
nodes/fragment/28/node = SubResource( 10 )
nodes/fragment/28/position = Vector2( -180, 120 )
nodes/fragment/29/node = SubResource( 11 )
nodes/fragment/29/position = Vector2( -180, 200 )
nodes/fragment/30/node = SubResource( 12 )
nodes/fragment/30/position = Vector2( -180, -40 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 5, 1, 0, 1, 24, 0, 5, 0, 3, 0, 24, 0, 25, 0, 24, 6, 26, 0, 24, 1, 29, 0, 24, 5, 28, 0, 24, 4, 27, 0, 24, 3, 30, 0, 24, 2 )

[resource]
shader = SubResource( 13 )
